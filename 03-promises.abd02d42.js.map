{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAGrCI,EAAgB,SAACC,EAAUC,GAc/B,OAbgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGtCJ,EAAQ,CAACH,WAAUC,UAInBG,EAAO,CAACJ,WAAUC,S,GAEjBA,E,KA2BPR,EAAKe,iBAAiB,UAvBtB,SAAwBC,GACtBA,EAAEC,iBAMF,IAJA,IAAIC,EAAQC,OAAOhB,EAAWiB,OACxBC,EAAOF,OAAOf,EAAUgB,OACxBE,EAASH,OAAOd,EAAYe,OAE1BG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAClDjB,EAAciB,EAAUL,GACvBM,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAEvEsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,MAGrEU,GAASG,GACA,GAAGA,EAAK,GAAGC,GAAQ,IAC1BU,MAAM,wB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\n\n\nconst createPromise = (position, delay) => {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve({position, delay});\n\n    } else {\n      // Reject\n      reject({position, delay});\n    }\n    }, delay);\n  })\n  return promise;  \n}\nfunction promiseCreated(e) {\n  e.preventDefault();\n\n  let delay = Number(inputDelay.value);\n  const step = Number(inputStep.value);\n  const amount = Number(inputAmount.value);\n\n  for(let position = 1; position <= amount; position += 1) {\n      createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        \n      });\n      delay += step\n      if(delay<0||step<0||amount<=0){\n        alert(\"data must be positive\");\n      }\n  }\n}\n  \nform.addEventListener('submit', promiseCreated);"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","step","amount","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","alert"],"version":3,"file":"03-promises.abd02d42.js.map"}